import supabase from "./supabase_client_v58.js";
const PANEL_ID = "clarionOutputPanel";
function $(s,root=document){ return root.querySelector(s); }
function el(tag, attrs={}, html=""){ const e=document.createElement(tag); for(const[k,v] of Object.entries(attrs||{})) e.setAttribute(k,v); if(html) e.innerHTML=html; return e; }
async function getRole(){ try{ const {data}=await supabase.rpc("clarion_self_role"); return (data||"lsp").toLowerCase(); }catch{ return "lsp"; } }
function ensurePanel(){ let p=document.getElementById(PANEL_ID); if(!p){ p=el("section",{id:PANEL_ID,class:"card"}); p.style.marginTop="1rem"; p.innerHTML=`<h3 id="opTitle">Output</h3><div id="opBody" style="min-height:160px"></div>`; (document.querySelector(".wrap")||document.body).appendChild(p);} return p;}
function setPanel(title, html){ const p=ensurePanel(); $("#opTitle",p).textContent=title; $("#opBody",p).innerHTML=html; p.style.display="block"; p.scrollIntoView({behavior:"smooth",block:"start"}); }
async function fetchTable(name){ const {data,error}=await supabase.from(name).select("*").limit(200).order("created_at",{ascending:false}); if(error) throw new Error(error.message); return data||[]; }
function fmt(v){ if(v==null)return""; return String(v); }
function rowHtml(a,i,t){ const email=a.email||a.applicant_email||a.user_email||""; const uid=a.user_id||a.uid||""; const note=a.note||a.notes||a.message||""; const when=a.created_at||a.ts||a.inserted_at||""; return `<tr data-idx="${i}" data-type="${t}" data-email="${email}" data-uid="${uid}"><td>${fmt(email)}</td><td>${fmt(uid)}</td><td>${fmt(when)}</td><td>${fmt(note)}</td><td style="white-space:nowrap"><button class="btn" data-act="appr-lsp">Approve LSP</button><button class="btn ghost" data-act="appr-prod">Approve Production</button><button class="btn ghost" data-act="deny">Deny</button></td></tr>`; }
function tableHtml(list,label){ if(!list.length) return `<div class="op-muted">No ${label}.</div>`; return `<div style="overflow:auto"><table style="width:100%;border-collapse:collapse"><thead><tr><th>Email</th><th>User ID</th><th>When</th><th>Note</th><th>Action</th></tr></thead><tbody>${list.map((a,i)=>rowHtml(a,i,label)).join("")}</tbody></table></div>`; }
async function findUserIdByEmail(email){ if(!email) return null; try{ const {data}=await supabase.rpc("manager_search_profiles",{search:email}); const hit=(data||[]).find(r=>(r.email||"").toLowerCase()===String(email).toLowerCase()); return hit?.id || (data?.[0]?.id ?? null); }catch{ return null; } }
async function setRole(uid,newRole){ try{ const {error}=await supabase.rpc("manager_set_role",{user_id:uid,new_role:newRole}); if(!error) return true; }catch{} try{ const {error}=await supabase.from("profiles").update({role:newRole,status:"active"}).eq("id",uid); if(!error) return true; }catch{} return false; }
async function markApproved(uid,source,email){ try{ await supabase.rpc("manager_mark_approved",{user_id:uid,source,email}); }catch{} }
function bindActions(p){ p.querySelectorAll("button[data-act]").forEach(btn=>{ btn.addEventListener("click", async ()=>{ const tr=btn.closest("tr"); const email=tr?.getAttribute("data-email")||""; let uid=tr?.getAttribute("data-uid")||""; if(!uid) uid=await findUserIdByEmail(email); if(!uid){ alert("Could not resolve user id for: "+email); return; } const act=btn.getAttribute("data-act"); const role=act==="appr-lsp"?"lsp":act==="appr-prod"?"production":null; if(!role && act==="deny"){ alert("Denied (no DB change performed)."); tr.style.opacity=.5; return; } btn.disabled=true; const ok=await setRole(uid,role); if(ok){ await markApproved(uid,tr?.getAttribute("data-type")||"",email); tr.style.opacity=.5; } else { alert("Approve failed. If you see an RLS error, run the manager approval SQL snippet."); } btn.disabled=false; }); }); }
async function openApprovals(){ const role=await getRole(); if(role!=="manager"){ alert("Approvals are manager-only."); return; } let acct=[],pre=[]; try{ acct=await fetchTable("account_applications"); }catch{} try{ pre=await fetchTable("preapprovals"); }catch{} const html=`<div class="tabs" style="margin-bottom:.6rem"><button class="tabbtn" data-tab="acct">Account Applications (${acct.length})</button><button class="tabbtn" data-tab="pre">Preapprovals (${pre.length})</button></div><div id="pane-acct" class="tabpane">${tableHtml(acct,"applications")}</div><div id="pane-pre" class="tabpane" style="display:none">${tableHtml(pre,"preapprovals")}</div><div class="op-muted" style="margin-top:.5rem">Approvals set a user's role and mark their status active. Only Managers can approve.</div>`; setPanel("Approvals", html); const p=document.getElementById(PANEL_ID); p.querySelectorAll(".tabbtn").forEach(b=>{ b.addEventListener("click", ()=>{ const a=b.getAttribute("data-tab")==="acct"; p.querySelector("#pane-acct").style.display=a?"block":"none"; p.querySelector("#pane-pre").style.display=a?"none":"block"; }); }); bindActions(p); }
document.addEventListener("DOMContentLoaded", ()=>{
  // Open via card or explicit button
  document.querySelectorAll(".card h3").forEach(h=>{
    if (/approvals/i.test(h.textContent||"")) {
      const card = h.closest(".card"); if (card && !card.__wired){ card.__wired=true; card.addEventListener("click", openApprovals); const btn=card.querySelector(".btn"); if (btn) btn.addEventListener("click",(e)=>{ e.preventDefault(); openApprovals(); }); }
    }
  });
  window.addEventListener("clarion:open-approvals", openApprovals);
});