-- v58.1 scaffolding (idempotent)
create table if not exists public.site_content (
  key text primary key,
  content text,
  published boolean default true,
  updated_at timestamptz default now()
);
alter table public.site_content enable row level security;
drop policy if exists sc_select_public on public.site_content;
create policy sc_select_public on public.site_content for select to anon using (coalesce(published,true)=true);
drop policy if exists sc_upsert_auth on public.site_content;
create policy sc_upsert_auth on public.site_content for insert to authenticated with check (true);
drop policy if exists sc_update_auth on public.site_content;
create policy sc_update_auth on public.site_content for update to authenticated using (true) with check (true);

create table if not exists public.chat_messages (
  id bigint generated by default as identity primary key,
  room text not null default 'admin',
  sender uuid not null default auth.uid(),
  sender_email text,
  body text not null,
  created_at timestamptz default now()
);
alter table public.chat_messages enable row level security;
drop policy if exists chat_select on public.chat_messages;
create policy chat_select on public.chat_messages for select to authenticated using (true);
drop policy if exists chat_insert on public.chat_messages;
create policy chat_insert on public.chat_messages for insert to authenticated with check (true);

create table if not exists public.gps_logs (
  id bigint generated by default as identity primary key,
  user_id uuid not null,
  production text,
  lat double precision not null,
  lng double precision not null,
  ts timestamptz default now()
);
alter table public.gps_logs enable row level security;
drop policy if exists gps_read_admin on public.gps_logs;
create policy gps_read_admin on public.gps_logs for select to authenticated using (
  coalesce((auth.jwt() ->> 'role')::text, '') in ('admin','manager')
);
drop policy if exists gps_insert_self on public.gps_logs;
create policy gps_insert_self on public.gps_logs for insert to authenticated with check (user_id = auth.uid());
